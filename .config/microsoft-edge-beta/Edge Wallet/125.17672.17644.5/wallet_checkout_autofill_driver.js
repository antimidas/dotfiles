!function(){"use strict";class e{static IsValidDataField(e){return null!=e&&e.length>0&&"null"!==e}static isElementDisabled(a,t){return(t??e.GetFirstVisibleElement(a))?.disabled}static RunQuerySelectorAll(e){const a=e.split("<");let t=document.querySelectorAll(a[0]);for(const e of a.slice(1)){const a=t[0]?.shadowRoot;if(!a)return[];t=a.querySelectorAll(e)}return t}static IsElementVisible(e){return e&&e.offsetWidth>0&&e.offsetHeight>0}static CountVisibleElements(a){if(!e.IsValidDataField(a))return 0;const t=e.RunQuerySelectorAll(a);let l=0;for(const a of t)e.IsElementVisible(a)&&l++;return l}static GetFirstVisibleElement(a){if(!e.IsValidDataField(a))return;const t=a.split(";");for(const a of t)try{const t=e.RunQuerySelectorAll(a);for(const a of t)if(e.IsElementVisible(a))return a}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: GetFirstVisibleElement error",e)}}static Sleep(e){return new Promise((a=>setTimeout(a,e)))}static async WaitForCondition(a,t,l){const o=(new Date).getTime();for(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: waiting");!await a()&&o+t>(new Date).getTime();)await e.Sleep(l??100);return window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: wait completed."),await a()}static async IsFieldVisible(a){return e.CountVisibleElements(a)>0}}class a{static Click(a,t,l){const o=t??e.GetFirstVisibleElement(a);return!!o&&(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: click element visible",o,o.innerText),e.isElementDisabled(void 0,o)||function(e){const a=["mousedown","click","mouseup"];if(l){let t=!1;a.forEach((a=>e.addEventListener(a,(()=>{t||(t=!0,l())}))))}a.forEach((a=>e.dispatchEvent(new MouseEvent(a,{bubbles:!0,buttons:1,cancelable:!0,view:window}))))}(o),!0)}static SetBoxValue(a,t){const l=document.createEvent("Events");l.initEvent("change",!0,!1);const o=document.createEvent("Events");o.initEvent("input",!0,!1);const i=new KeyboardEvent("keyup",{bubbles:!0,cancelable:!0,view:window}),n=e.GetFirstVisibleElement(a);return n?(n.blur(),n.dispatchEvent(l),n.focus(),n.setAttribute("value",t),n.value=t,n.dispatchEvent(i),n.dispatchEvent(o),n.dispatchEvent(l),n.blur(),!0):(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: input box undefined"),!1)}}var t,l;function o(e,a,t){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: SendAutofillCompleteMessage",e,a,t),a?(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: iframe postMessage to parent",e,t),parent.postMessage({type:l.WalletCheckoutAutofillDriverCompleteMessage,payload:e},t)):window.WalletCheckoutScriptAutofillRuntime.postMessageToHost("AutofillComplete",e)}async function i(t){const{Name:l,Selector:o,Type:i,ValueList:n,WaitBefore:s,SecondarySelector:d}=t;"button"==i&&0==n?.length||await e.Sleep(s||0);const c=await e.IsFieldVisible(o);if(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: isSelectorVisible",l,c),!c)throw new Error("Selector not found");if("input"===i&&n?.[0]){const t=e.GetFirstVisibleElement(o);window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: targetElement",l,t);const i=t.tagName;if("INPUT"===i)a.SetBoxValue(o,n?.[0]);else if("SELECT"===i){const e=t.getElementsByTagName("option"),i=n.map((e=>e.toLowerCase()));window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: lowerValueList",l,i);for(const t of e){const e=t?.attributes?.getNamedItem("value").value?.trim();if(i.includes(e?.toLowerCase()))return a.SetBoxValue(o,e),void(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: shouldValue",l,e))}window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: shouldValue not match",l)}}else if("button"===i)if(d){const t=await e.IsFieldVisible(d);window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: isSecondarySelectorVisible",l,t),t||(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: click",o),a.Click(o))}else window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: click",o),a.Click(o),e.GetFirstVisibleElement(o).scrollIntoView()}function n(e,a){const t=new RegExp(`(?<![a-zA-Z0-9])${e}(?![a-zA-Z])`,"i");return a?.match(t)}function s(e,l,o){for(const i of e){const e=(i?.innerText||i?.innerHTML)?.toUpperCase()?.trim();let s=!1;if(s=o===t.ExactMatch?l.some((a=>a===e)):l.some((a=>n(a,e))),s)return a.Click(void 0,i),!0}return!1}function d(a,l,o){const i=e.RunQuerySelectorAll(l),n=o?.map((e=>e.toUpperCase()));let d=s(i,n,t.ExactMatch);return window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: after ExactMatch, canMatch",a,d),d||(d=s(i,n,t.RegMatch),window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: after RegMatch, canRegMatch",a,d)),d}async function c(t){const{Name:l,ValueList:o,WaitForVisible:i,ArrowDownSelector:n,SecondarySelector:s,SecondaryType:c}=t;if(s){const t=await e.WaitForCondition((async()=>await e.IsFieldVisible(s)),i||0);if(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: isSecondarySelectorVisible",l,t),!t)throw new Error("Secondary selector not found");if("option"===c){let t=!1;if(n)for(;!t&&!e.isElementDisabled(n);)window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: click ArrowDownSelector",n),a.Click(n,void 0,(()=>{t=d(l,s,o)}));else t=d(l,s,o);if(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: canMatch final result",l,t),!t)throw new Error("Secondary selector of option cannot match ValueList")}else"button"===c&&a.Click(s)}}!function(e){e[e.ExactMatch=0]="ExactMatch",e[e.RegMatch=1]="RegMatch"}(t||(t={})),function(e){e.WalletCheckoutAutofillDriverCompleteMessage="WalletCheckoutAutofillDriverCompleteMessage"}(l||(l={})),window.WalletCheckoutScriptAutofillRuntime=new class{initialize(e){return window.loadTimeData={data_:{isDebugEnabled:!0}},window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: initialize, params: ",e),e.splice(0,2),window.ExecuteInitialize(e),!0}raiseMessageFromHost(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: raiseMessageFromHost",e);if("WalletCheckoutScriptAutofill"===e.shift())try{"interactive"===document.readyState||"complete"===document.readyState?window.ExecuteAutofill(e):window.addEventListener?.("DOMContentLoaded",(()=>{window.ExecuteAutofill(e)}))}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: raiseMessageFromHost error",e)}}postMessageToHost(e,a){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: postMessageToHost",e,a);try{walletCheckoutAutofillNativeHandler&&walletCheckoutAutofillNativeHandler.sendMessageToHost(e,a)}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: postMessageToHost error",e)}}},window.ExecuteInitialize=async function(a){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: ExecuteInitialize",a);const t=a?.[1],i=JSON.parse(t??"{}"),{IsDebugEnabled:n}=i;window.loadTimeData={data_:{isDebugEnabled:n}};const s=a?.[2],d=JSON.parse(s??"{}");window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: primaryMainFrameData",d);const{ShouldListenToIframeMessage:c}=d;let g=!1;function r(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: receive message from iframe, event: ",e);const{type:a,payload:t}=e.data;if(a===l.WalletCheckoutAutofillDriverCompleteMessage){g=!0,window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: receive WalletCheckoutAutofillDriverComplete message from iframe, payload: ",t);try{o(t)}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: postMessageToHost error",e)}}}c&&(window.addEventListener("message",r),await e.WaitForCondition((async()=>g),1e4),window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: isIframeResponseReturned",g),window.removeEventListener("message",r))},window.ExecuteAutofill=async function(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: ExecuteAutofill",e);const a=e?.[0],t=JSON.parse(a??"{}"),{CheckoutElements:l=[]}=t,n=e?.[3],s=JSON.parse(n??"{}");window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: iframeData",s);const{IsIframeElement:d,ParentOrigin:g}=s;try{let e=!0;const a=[];for(const t of l){const{Name:l,Selector:o,SecondarySelector:n}=t;if(o)try{await i(t)}catch(t){e=!1,a.push({failedField:l,failureReason:t.message});continue}if(n)try{await c(t)}catch(t){e=!1,a.push({failedField:l,failureReason:t.message})}}o([JSON.stringify({isSuccess:e,failureDetails:a?.length>0?a:null})],d,g)}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: ExecuteAutofill error",e),o([JSON.stringify({isSuccess:!1,failureDetails:null})],d,g)}}}();